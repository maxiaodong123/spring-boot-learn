server:
  port: 8081  # 设置端口号

spring:
#  rabbitmq:
#    host: 127.0.0.1  # 设置RabbitMQ所在主机
#    port: 5672       # 设置RabbitMQ服务端口
#    username: guest  # 设置RabbitMQ用户名
#    password: guest  # 设置RabbitMQ密码
  rabbitmq:
#    # rabbitmq安装位置
#    host: 192.168.3.37
#    # rabbitmq的端口
#    port: 5672
#    # rabbitmq的用户名
#    username: xiaonu
#    # rabbitmq的用户密码
#    password: xiaonu123
#    virtual-host: app
    # rabbitmq的用户名
    addresses: 1.14.8.190:5672,1.14.8.190:5673,1.14.8.190:5674
    username: user
    # rabbitmq的用户密码
    password: 123456
#    virtual-host: user
    #开启 confirm 确认机制
    #发布确认属性有三种确认类型:None,Correlated,Simple
    #None 值是禁用发布确认模式，是默认值。
    #Correlated 值是发布消息成功到交换器后会触发回调方法 。
    #Simple 值经测试有两种效果
    #其一:效果和CORRELATED值一样会触发回调方法，
    #其二:在发布消息成功后使用rabbitTemplate调用waitForConfirms或waitForConfirmsOrDie方法等待 broker节点返回发送结果，
    #根据返回结果来判定下一步的逻辑，要注意的点是waitForConfirmsOrDie方法如果返回false则会关闭channel，则接下来无法发送消息到broker。
    publisher-confirm-type: correlated
    #生产者发送的消息，经 Exchange 交换器路由到某个Queue队列中
    publisher-returns: true
    #当 mandatory 参数设置为true时，交换器无法根据自身的类型和路由键找到一个符合条件对队列，那么 RabbitMQ 会调用 Basic.Return 命令将消息返回给生产者。
    #当 mandatory 参数设置为 false 时，出现上述情况，则消息直接被丢弃。
    template:
      mandatory: true
    listener:
      simple:
        # 设置消费端手动 ack
        acknowledge-mode: manual
        # 是否支持重试
        retry:
          enabled: true

